{
  "name": "websockets",
  "version": "1.0.0",
  "description": "```text\r real-time-app/\r ├── package.json\r ├── README.md\r ├── config/\r │   └── index.js           # Configuration générale (ports, clés, variables d'environnement, etc.)\r ├── src/\r │   ├── app.js             # Configuration et initialisation de l'application Express (middlewares, parsers, routes)\r │   ├── server.js          # Point d'entrée qui démarre le serveur HTTP et attache les WebSockets (ex: avec Socket.IO)\r │   ├── api/               # Logique REST de l’application\r │   │   ├── routes/\r │   │   │   ├── userRoutes.js         # Routes pour la gestion des utilisateurs\r │   │   │   ├── locationRoutes.js     # Routes pour la géolocalisation (historique, etc.)\r │   │   │   ├── accelerometerRoutes.js# Routes pour récupérer ou historiser les données d’accéléromètre\r │   │   │   └── videoRoutes.js        # Routes éventuelles pour la partie visioconférence (par exemple pour gérer la signalisation)\r │   │   ├── controllers/\r │   │   │   ├── userController.js\r │   │   │   ├── locationController.js\r │   │   │   ├── accelerometerController.js\r │   │   │   └── videoController.js\r │   │   └── services/\r │   │       ├── userService.js\r │   │       ├── locationService.js     # Logique métier pour traiter les mises à jour de positions\r │   │       ├── accelerometerService.js# Logique métier pour traiter les données d’accéléromètre\r │   │       └── videoService.js        # Logique métier pour la signalisation ou le contrôle de la visioconférence\r │   ├── sockets/           # Gestion des WebSockets pour la communication temps réel\r │   │   ├── index.js                # Initialisation de la connexion Socket.IO et répartition vers les modules dédiés\r │   │   ├── locationSocket.js       # Gestion des événements liés aux positions GPS (ex: \"updateLocation\")\r │   │   ├── accelerometerSocket.js  # Gestion des événements des accéléromètres (ex: \"updateAccelerometer\")\r │   │   └── videoSocket.js          # Gestion des événements pour la visioconférence (ex: \"video-offer\", \"video-answer\", \"candidate\")\r │   ├── models/            # Modèles de données (pour une base de données, par exemple avec Mongoose)\r │   │   ├── user.js\r │   │   ├── location.js\r │   │   └── accelerometer.js\r │   └── utils/             # Fonctions utilitaires (logger, helpers, etc.)\r │       └── logger.js\r ├── public/                # Fichiers statiques (HTML, CSS, JS côté client, images, etc.)\r │   ├── index.html\r │   ├── js/\r │   │   ├── main.js         # Initialisation générale côté client\r │   │   ├── map.js          # Logique d'affichage et de mise à jour de la carte\r │   │   └── video.js        # Gestion de la visioconférence côté client\r │   ├── css/\r │   │   └── style.css\r │   └── assets/            # Autres ressources (images, icônes, etc.)\r └── tests/                 # Tests unitaires et d'intégration\r     ├── api/               # Tests pour les routes, controllers et services\r     ├── sockets/           # Tests pour la logique des WebSockets\r     └── utils/             # Tests pour les utilitaires\r ```",
  "main": "src/app.js",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Nolanndev",
  "license": "MIT"
}
